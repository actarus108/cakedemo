trigger:
- main

variables:
  buildConfiguration: Release
  revision: ci

pool:
  vmImage: ubuntu-latest

stages:
  - stage: Build
    jobs:
    - job: BuildJob
      steps:        
      - task: DotNetCoreCLI@2
        displayName: Dotnet Tool Restore
        inputs:
          command: custom
          custom: tool
          arguments: restore

      - task: Cake@2
        displayName: Cake Build Process
        inputs:
          script: build.cake          
          target: Default
          verbosity: Verbose
          arguments: |
            --configuration $(buildConfiguration) 
            --build $(Build.BuildId) 
            --revision $(revision)

      - task: PublishTestResults@2
        displayName: Publish Tests Results
        inputs:
          testResultsFormat: VSTest
          testResultsFiles: '**/*.trx'
          searchFolder: $(Build.SourcesDirectory)/testresults
          testRunTitle: $(Build.BuildNumber)
          publishRunAttachments: true
        condition: always()

      - task: PublishCodeCoverageResults@1
        displayName: Publish Code Coverage Results
        inputs:
          codeCoverageTool: 'Cobertura'
          summaryFileLocation: $(Build.SourcesDirectory)/testresults/**/coverage.cobertura.xml
          reportDirectory: $(Build.ArtifactStagingDirectory)
        condition: always()

      - task: CopyFiles@2
        displayName: Copy Files to ArtifactStagingDirectory
        inputs:
          SourceFolder: $(Build.SourcesDirectory)/artifacts
          Contents: |
            *.zip
            *.nupkg
          TargetFolder: $(Build.ArtifactStagingDirectory)
          CleanTargetFolder: true

      - task: PublishBuildArtifacts@1
        displayName: Publish Artifacts
        inputs:
          PathtoPublish: $(Build.ArtifactStagingDirectory)
          ArtifactName: drop
          publishLocation: Container

  - stage: DeployPackage
    jobs:
    - job: DeployPackage
      steps:
        - task: DotNetCoreCLI@2
          displayName: Publishing the nuget Package to the Azure DevOps feed
          inputs:
            command: 'push'
            packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
            nuGetFeedType: 'internal'
            publishVstsFeed: 'afa87726-6977-4997-b7df-99c5d3cf444e/fb789773-b199-461c-a975-0f88275a8f1f'

  - stage: DeployWebApp
    jobs:
    - job: DeployWebApp
      steps:
        - script: echo Deploying the Web Application