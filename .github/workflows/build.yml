name: Cake CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  
  buildConfiguration: Release
  revision: ci

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set the Build Id
        id: get-id
        run: |
          buildid="${{github.run_id}}"
          echo "BUILD_ID=${buildid: -5}" >> $GITHUB_OUTPUT
        
      - name: Dotnet Tool Restore
        run: dotnet tool restore

      - name: Cake Build Process
        uses: cake-build/cake-action@v1.4.1
        with:
          target: Default
          verbosity: Diagnostic
          arguments: |
            configuration: ${{ env.buildConfiguration }}
            build: ${{ steps.get-id.outputs.BUILD_ID }}
            revision: ${{ env.revision }}
        
      - name: Publish Tests Results
        uses: dorny/test-reporter@v1.6.0
        if: always()
        with:
          name: Tests Results
          path: testresults/*.trx
          reporter: dotnet-trx

      - name: Publish Code Coverage Results
        uses: irongut/CodeCoverageSummary@v1.3.0
        if: always()
        with: 
          filename: testresults/**/coverage.cobertura.xml
          badge: true
          output: both
          format: markdown
          indicators: true

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md

      - name: Publish Website Artifacts
        uses: actions/upload-artifact@main
        with:
          name: website
          path: |
            artifacts/website.zip
            artifacts/*.nupkg

      - name: Publish MyLibrary Artifacts
        uses: actions/upload-artifact@main
        with:
          name: package
          path: |
            artifacts/*.nupkg

  deployPackage:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Download MyLibrary Artifacts
      uses: actions/download-artifact@main
      with: 
        name: package
    - run: echo Deploying the Nuget Package

  deployWebApp:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Download Website Artifacts
      uses: actions/download-artifact@main
      with: 
        name: website
    - run: echo Deploying the Web Application